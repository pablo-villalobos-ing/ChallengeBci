plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'groovy'
}

group = 'com.PabloVillalobos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	
	
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	//spock
	implementation 'org.codehaus.groovy:groovy:3.0.12'
	testImplementation platform("org.spockframework:spock-bom:2.2-groovy-4.0")
	testImplementation "org.spockframework:spock-core"
  	testImplementation "org.spockframework:spock-junit4"  // you can remove this if your code does not rely on old JUnit 4 rules
	testCompile "org.spockframework:spock-spring:2.2-groovy-4" 
	
  	// optional dependencies for using Spock
  	testImplementation "org.hamcrest:hamcrest-core:2.2"   // only necessary if Hamcrest matchers are used
  	testRuntimeOnly 'net.bytebuddy:byte-buddy:1.12.8' // allows mocking of classes (in addition to interfaces)
  	testRuntimeOnly "org.objenesis:objenesis:3.2"      // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)

  	// dependencies used by examples in this project
  	testRuntimeOnly "com.h2database:h2:2.1.210"
  	implementation "org.codehaus.groovy:groovy-sql:3.0.9"
    
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
    events "passed", "skipped", "failed"
  }
}
